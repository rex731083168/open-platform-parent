<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd   
            ">

	<util:properties id="redis"
		location="classpath:conf/application.properties"></util:properties>

	<!-- RedisHttpSessionConfiguration -->
	<bean class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
		<property name="maxInactiveIntervalInSeconds" value="${redis.session.maxInactiveIntervalInSeconds}" />
	</bean>

	<!--JedisConnectionFactory -->
	<bean
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg index="0">
			<!-- since spring-data-redis 1.7 -->
			<bean
				class="org.springframework.data.redis.connection.RedisClusterConfiguration">
				<constructor-arg index="0">
					<set>
						<value>#{redis['redis.redisClusterConfiguration.clusters']}</value>
					</set>
				</constructor-arg>

				<!-- 用于 redis.clients.jedis.JedisCluster.JedisCluster(Set<HostAndPort>, 
					int, int, GenericObjectPoolConfig) 第三个参数 maxRedirections 默认值是5 一般当此值设置过大时，容易报：Too 
					many Cluster redirections -->
				<property name="maxRedirects" value="#{redis['redis.redisClusterConfiguration.maxRedirects']}" />
			</bean>
		</constructor-arg>

		<constructor-arg index="1">
			<bean class="redis.clients.jedis.JedisPoolConfig">
				<property name="maxIdle" value="#{redis['redis.jedisPoolConfig.MaxIdle']}" />
				<property name="testOnBorrow"
					value="#{redis['redis.jedisPoolConfig.testOnBorrow']}" />
				<property name="testOnReturn"
					value="#{redis['redis.jedisPoolConfig.testOnReturn']}" />
			</bean>
		</constructor-arg>
		
		<property name="password" value="${redis.password}"></property>
		<property name="timeout" value="10000"/>
		
	</bean>

</beans>