<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.ce.platform_service.sandbox.dao.IMysqlSandboxRouterDao">
	<resultMap type="cn.ce.platform_service.sandbox.entity.SandboxRouterEntity" id="saasMap">
		<result column="saas_id" property="saas_id"/>
		<result column="resource_type" property="resource_type"/>
		<result column="target_url" property="target_url"/>
		<result column="sandbox_id" property="sandbox_id"/>
	</resultMap>


	<insert id="save" parameterType="cn.ce.platform_service.sandbox.entity.SandboxRouterEntity">
		INSERT INTO saas
			(saas_id,resource_type,target_url,sandbox_id)
		VALUES
			(#{saas_id},#{resource_type},#{target_url},#{sandbox_id})
	</insert>

	<delete id="clearAll">
		delete from saas where uuid > 0
	</delete>
	
	<select id="getSandboxRouter" resultMap="saasMap">
		select 
			saas_id,resource_type,target_url
		from saas 
			where saas_id = #{saas_id} and resource_type=#{resource_type} 
			and sandbox_id=#{sandbox_id}
	</select>
	
	<delete id="deleteSandboxRouter">
		delete from saas where
			saas_id=#{saas_id} and resource_type=#{resource_type}
			and sandbox_id=#{sandbox_id}
	</delete>
	
	<update id="updateSandboxRouter">
		update saas set  
			target_url = #{target_url} 
		where 
			saas_id=#{saas_id} and resource_type=#{resource_type} 
			and sandbox_id=#{sandbox_id}
	</update>

</mapper>