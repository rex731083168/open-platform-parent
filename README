运行环境》》》》》
编译环境:jdk 1.8
web容器:推荐tomcat 8.5以上

项目结构说明》》》
platform-console(前端访问)   >> war - tomcat
platform-manage(后台审核)  >> war - tomcat
platform-oauth-tykcode(对接cas系统,生成tykcode服务)   >> war - tomcat
platform-service(jar包服务 为console / manage / oauth-tykcode)提供服务 >> jar

项目开发手册及规范》》》
具体项目规范常见wiki:http:${wiki.url}


项目构建》》》
进入 paas-parent目录下，执行命令：mvn clean install package –Plocal


项目配置文件说明》》》
项目采取profile环境自适应配置方式,本机开发时，查找对应应用的src.main.filters/local.properties配置文件
mongo* = mongoDB相关配置
base.log.dir 项目日志文件输出盘符目录
error.report.mail 错误日志发送邮件地址 
error.report.size 单位(k) 当错误日志文件达到${size}k时，发送邮件至${error.report.mail}邮箱中进行监控报警


Git版本管理说明》》》
分支定义：
 devlop（开发分支）最全量的代码，与master分支保持同步
 feature/*（目标分支）根据每期的业务目标，创建对应的分支 source:devlop  |  target:feature/*
 release/*（预上线分支）
	此分支在feature分支开发完成并测试通过后，合并代码至此分支，进行上线部署测试
	线上测试出现bug,在此分支进行修改调整
	线上测试通过后,合并至devlop分支，并删除分支
 master（主干分支）
  a. devlop分支代码发生变化时,发起merge请求,由项目管理员进行审批
  b. master分支合并请求通过后，创建tag
 hotfix（紧急修复分支）线上发现问题时,从master分支中创建hotfix分支，修复完成后会将代码合并至devlop分支，问题处理完成后 删除此分支


versions:
1.0.0
实现开放平台1期需求
1.0.1
整合es服务至platform-console服务中
1.0.2
重构代码，优化接口入参出参格式，log4j日志规范等
2.0.1
支持门户定制化项目所需中台的能力开放
添加开放应用，定制应用，调用中台接口
api支持动态路由
api访问方式改为token
2.0.2
调整对接产品中心接口的service实现类，实体属性得数据类型以及转化JSON字符串的工具类
2.1.1.5
api添加内部调用
2.1.2.5
批量导入导出功能
2.4.5 
dubbo展示，api支持多资源类型
api和路由关系增加资源类型