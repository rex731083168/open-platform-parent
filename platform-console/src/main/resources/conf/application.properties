#mongodb config
mongodb.replica-set=${mongodb.replica.set}
mongodb.credentials=${mongodb.credentials.config}
mongo.connectionsPerHost=${mongo.connectionsPerHost}
mongo.threadsAllowedToBlockForConnectionMultiplier=${mongo.threadsAllowedToBlockForConnectionMultiplier}
mongo.connectTimeout=${mongo.connectTimeout}
mongo.maxWaitTime=${mongo.maxWaitTime}
mongo.socketKeepAlive=${mongo.socketKeepAlive}
mongo.socketTimeout=${mongo.socketTimeout}


#redis config
redis.redisClusterConfiguration.clusters=${redis.redisClusterConfiguration.clusters}
redis.redisClusterConfiguration.maxRedirects=${redis.redisClusterConfiguration.maxRedirects}
redis.jedisPoolConfig.MaxIdle=${redis.jedisPoolConfig.MaxIdle}
redis.jedisPoolConfig.testOnBorrow=${redis.jedisPoolConfig.testOnBorrow}
redis.jedisPoolConfig.testOnReturn=${redis.jedisPoolConfig.testOnReturn}
redis.password=${redis.password}

#redis session config
redis.session.maxInactiveIntervalInSeconds=${redis.session.maxInactiveIntervalInSeconds}

#es config
es.path=${es.path}

#mail config
mail.server=smtp.300.cn
mail.user=xxh@300.cn
mail.password=xxh@
mail.protocol=smtp
mail.nick=\u4fe1\u606f\u5316\u7814\u53d1\u90e8

#sms config
#sms.username=${sms.username}
#sms.pwd=${sms.pwd}
#sms.uri=${sms.uri}
#sms.websiteid=${sms.websiteid}
#sms.sign=${sms.sign}
#sms.provider.id=${sms.provider.id}


#interface URL config
findTenantAppsByTenantKey=${i_ip_port}/findTenantAppsByTenantKey?key=${key}
registerBathApp=${i_ip_port}/app/registerBathApp?tenantId=${tId}&apps=${appList}

#appType:default query all,1 on behalf of  standard products, 2 on behalf of customized products
findPagedApps=${i_ip_port}/app/findPagedApps?owner=${o}&name=${n}&pageNum=${p}&pageSize=${z}&appType=1
saveOrUpdateApps=${i_ip_port}/app/saveOrUpdateApps?apps=${apps}
generatorTenantKey=${i_ip_port}/generatorTenantKey?id=${TenantKeyid}  
#${TenantKeyid} is mean interfacedoc id
findTenantAppsByTenantKeypage=${i_ip_port}/findTenantAppsByTenantKeyAndAppName?key=${key}&appName=${n}&pageSize=${z}&pageNum=${p}
#resource type URL
getProviders=${unit_ip_port}/unit/getProviders

#menu URL
productMenuList=${menu_ip_port}/api-platform/openapi/productMenuList?bossInstanceCode={bossInstanceCode}
registerMenu=${menu_ip_port}/api-platform/openapi/registerMenu



#single login in
checkTicket=${single_login_ip}/passport/checkTicket


#taskExecutor
taskExecutor.corePoolSize =5
taskExecutor.keepAliveSeconds=200
taskExecutor.maxPoolSize=10
taskExecutor.queueCapacity=20

#monitor
menuMonitor=${menu_ip_port}/api-platform/openapi/productMenuList?bossInstanceCode=monitor
#zookeeper
zookeeper.connection=${zookeeper_connection}
dubbo.node=${dubbo_node}